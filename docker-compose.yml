version: "3.0"
services:
  appointment:
    image: quarkus/appointment
    build:
      context: ./appointment-service
      dockerfile: src/main/docker/Dockerfile.jvm
    ports:
      - "9080:8080"
    networks:
      - front-tier
      - back-tier
    environment:
      quarkus.datasource.username: quarkus
      quarkus.datasource.password: quarkus
      quarkus.datasource.jdbc.url: jdbc:postgresql://database/quarkus
      kafka.bootstrap.servers: host.docker.internal:29092
  notification:
    image: quarkus/notification-service
    build:
      context: ./notification-service
      dockerfile: src/main/docker/Dockerfile.jvm
    ports:
      - "7080:8091"
    networks:
      - front-tier
      - back-tier
    environment:
      quarkus.datasource.username: quarkus
      quarkus.datasource.password: quarkus
      quarkus.datasource.jdbc.url: jdbc:postgresql://database/quarkus
      kafka.bootstrap.servers: host.docker.internal:29092
  pharmacy:
    image: quarkus/pharmacy-service
    build:
      context: ./pharmacy-service
      dockerfile: src/main/docker/Dockerfile.jvm
    ports:
      - "8090:8090"
    networks:
      - front-tier
      - back-tier
    environment:
      quarkus.datasource.username: quarkus
      quarkus.datasource.password: quarkus
      quarkus.datasource.jdbc.url: jdbc:postgresql://database/quarkus
      kafka.bootstrap.servers: host.docker.internal:29092
  database:
    image: postgres
    ports:
      - "5432:5432"
    networks:
      - back-tier
    environment:
      POSTGRES_PASSWORD: quarkus
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_DB: quarkus
      POSTGRES_USER: quarkus
    volumes:
      - /custom/mount:/var/lib/postgresql/data
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - back-tier
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    networks:
      - back-tier
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
networks:
  front-tier: {}
  back-tier: {}
